###############################################################################
## Copyright (c) 2016
## Josef Spidlen, Faysal El Khettabi, Wayne Moore, David Parks, Ryan Brinkman
##
## License
## The software is distributed under the terms of the
## Artistic License 2.0
## http://www.r-project.org/Licenses/Artistic-2.0
## 
## Disclaimer
## This software and documentation come with no warranties of any kind.
## This software is provided "as is" and any express or implied
## warranties, including, but not limited to, the implied warranties of
## merchantability and fitness for a particular purpose are disclaimed.
## In no event shall the copyright holder be liable for any direct,
## indirect, incidental, special, exemplary, or consequential damages
## (including but not limited to, procurement of substitute goods or
## services; loss of use, data or profits; or business interruption)
## however caused and on any theory of liability, whether in contract,
## strict liability, or tort arising in any way out of the use of this
## software.
###############################################################################

#export(BEADflowQBCalculation,find_peak,scatter_gate,LEDflowQBCalculation);
#importMethodsFrom(Biobase,exprs)
#importMethodsFrom(methods, show)
#importFrom(graphics, abline, axis, par, title)
#importFrom(flowCore, filter)
#importFrom(flowCore, Subset)

#### New code starts here
export("find_peak")
export("get_results_for_dyes")
export("calc_mean_sd_197")
export("calc_mean_sd_duke")
export("calc_mean_sd_capture")
export("calc_mean_sd_capture_all")
export("calc_mean_sd_background")
export("fit_led")
export("fit_multipeak")

exportMethods(
    "split_in_two", 
    "peak_gate", 
    "pick_parameters",
    "fitted_ellipse_gate"
)

importMethodsFrom("flowCore",
    "exprs",
    "description",
    "description<-",
    "colnames",
    "parameters"
)

importFrom("extremevalues", "getOutliers")
importFrom("flowCore", "read.FCS", "logicleTransform")
importFrom("stats", "lm", "coefficients", "residuals", "kmeans")
importFrom("methods", "new")

importClassesFrom("methods", "list", "numeric", "vector")
importClassesFrom("flowCore", "flowFrame")

